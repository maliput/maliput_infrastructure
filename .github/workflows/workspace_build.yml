name: gcc-workspace-build

on:
  push:
  pull_request:
  schedule:
    - cron:  '0 9 * * *' # 9:00am UTC, 1:00am PST.

env:
  PACKAGE_NAME: maliput_infrastructure
  ROS_WS: maliput_ws
  # We want zero interaction while installing or upgrading the system via apt.
  # It accepts the default answer for all questions.
  DEBIAN_FRONTEND: noninteractive

jobs:
  compile_and_test:
    name: Verify workspace set up
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ubuntu: [18.04, 20.04]
        include:
          - ubuntu: 18.04
            UBUNTU_NAME: bionic
            ROS_DISTRO: dashing
          - ubuntu: 20.04
            UBUNTU_NAME: focal
            ROS_DISTRO: foxy
    container:
      image: ubuntu:${{ matrix.ubuntu }}
    env:
      ROS_DISTRO: ${{ matrix.ROS_DISTRO }}
    steps:
    # install git from ppa since git 2.18+ is needed to fetch all branches from actions/checkout
    # this step can be removed on 20.04
    - name: install git from ppa
      if: matrix.ubuntu == '18.04'
      shell: bash
      run: |
        apt update;
        apt install -y software-properties-common;
        add-apt-repository -y -u ppa:git-core/ppa;
        apt install -y git;
    - uses: actions/checkout@v2
      with:
        path: maliput_infrastructure
    - name: install dependencies
      shell: bash
      run: ${GITHUB_WORKSPACE}/${PACKAGE_NAME}/tools/install_dependencies.sh
    # clone private dependencies
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/maliput
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/maliput_py
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_py
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/maliput_dragway
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_dragway
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/maliput_multilane
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_multilane
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/maliput_malidrive
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_malidrive
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/drake-vendor
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/drake_vendor
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/maliput_integration
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_integration
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/maliput_integration_tests
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_integration_tests
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      if: matrix.ubuntu == '20.04'
      with:
        repository: ToyotaResearchInstitute/delphyne
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/delphyne
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      if: matrix.ubuntu == '20.04'
      with:
        repository: ToyotaResearchInstitute/delphyne_gui
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/delphyne_gui
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      if: matrix.ubuntu == '20.04'
      with:
        repository: ToyotaResearchInstitute/delphyne_demos
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/delphyne_demos
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      if: matrix.ubuntu == '20.04'
      with:
        repository: ToyotaResearchInstitute/maliput_documentation
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_documentation
        token: ${{ secrets.MALIPUT_TOKEN }}
    - name: check if dependencies have a matching branch
      shell: bash
      working-directory: ${{ env.ROS_WS }}/src
      run: ${GITHUB_WORKSPACE}/${PACKAGE_NAME}/.github/try_vcs_checkout ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}} .
    # clone public dependencies
    - name: vcs import
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: |
        vcs import src < ${GITHUB_WORKSPACE}/${PACKAGE_NAME}/.github/dependencies.repos;
    - run: colcon graph
      shell: bash
      working-directory: ${{ env.ROS_WS }}
    - name: rosdep install
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: |
        rosdep update --include-eol-distros;
        rosdep install  -i -y --rosdistro ${ROS_DISTRO} --skip-keys "pybind11" --from-paths src
    - name: install drake
      shell: bash
      working-directory: ${{ env.ROS_WS }}/src/drake_vendor
      run: ./drake_installer
    - name: colcon build libraries
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: |
        . /opt/ros/${ROS_DISTRO}/setup.bash;
        colcon build --event-handlers=console_direct+

name: gcc-workspace-build

on:
  push:
  pull_request:
  schedule:
    - cron:  '0 9 * * *' # 9:00am UTC, 1:00am PST.

env:
  PACKAGE_NAME: maliput_infrastructure
  ROS_DISTRO: dashing
  ROS_WS: maliput_ws
  # We want zero interaction while installing or upgrading the system via apt.
  # It accepts the default answer for all questions.
  DEBIAN_FRONTEND: noninteractive

jobs:
  compile_and_test:
    name: Verify workspace set up
    runs-on: ubuntu-18.04
    container:
      image: ubuntu:18.04
    steps:
    # install git from ppa since git 2.18+ is needed to fetch all branches from actions/checkout
    # this step can be removed on 20.04
    - name: install git from ppa
      shell: bash
      run: |
        apt update;
        apt install -y software-properties-common;
        add-apt-repository -y -u ppa:git-core/ppa;
        apt install -y git;
    - uses: actions/checkout@v2
      with:
        path: maliput_infrastructure
    - name: install dependencies
      shell: bash
      run: ${GITHUB_WORKSPACE}/${PACKAGE_NAME}/tools/install_dependencies.sh
    # clone private dependencies
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/maliput
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/maliput_py
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_py
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/maliput_dragway
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_dragway
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/maliput-multilane
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_multilane
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/maliput_malidrive
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_malidrive
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/malidrive
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/malidrive
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/drake-vendor
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/drake_vendor
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/maliput-documentation
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_documentation
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/maliput-integration
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_integration
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/maliput-integration-tests
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_integration_tests
        token: ${{ secrets.MALIPUT_TOKEN }}
    - name: check if dependencies have a matching branch
      shell: bash
      working-directory: ${{ env.ROS_WS }}/src
      run: ${GITHUB_WORKSPACE}/${PACKAGE_NAME}/.github/try_vcs_checkout ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}} .
    # clone public dependencies
    - name: vcs import
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      # ign-gui0 is removed because it is only necessary for delphyne* packages, not for
      # the others.
      run: |
        vcs import src < ${GITHUB_WORKSPACE}/${PACKAGE_NAME}/.github/dependencies.repos;
        rm -rf src/ign-gui0;
    - run: colcon graph
      shell: bash
      working-directory: ${{ env.ROS_WS }}
    - name: rosdep install
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: |
        rosdep update;
        rosdep install  -i -y --rosdistro ${ROS_DISTRO} \
          --skip-keys "ignition-transport8 ignition-msgs5 ignition-math6 ignition-common3 ignition-gui0 ignition-gui3 ignition-rendering3 pybind11" \
          --from-paths src
    - name: install drake via drake_vendor
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: ./src/drake_vendor/drake_installer
    - name: colcon build libraries
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: |
        . /opt/ros/${ROS_DISTRO}/setup.bash;
        colcon build --event-handlers=console_direct+
